<% entity_transaction = form.object %>

<%= content_tag :div,
                id: "entityModal#{form.index}",
                class: "hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)]",
                data: { controller: "entity-transaction" },
                tabindex: "-1" do %>
  <div class="relative p-4 w-full max-w-2xl max-h-full">
    <!-- Modal content -->
    <div class="relative bg-white rounded-lg shadow-lg">
      <!-- Modal header -->
      <div class="flex items-center justify-between p-4 md:p-5 border-b rounded-t border-gray-200">
        <%= content_tag :span,
                        entity_transaction&.entity&.entity_name,
                        class: "entities_entity_name w-full text-black text-center text-ellipsis text-2xl lg:text-3xl xl:text-4xl 2xl:text-5xl font-extrabold border-0
                               outline-hidden tracking-tight caret-transparent" %>

        <%= button_tag type: :button,
                       class: "text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center",
                       data: { modal_hide: "entityModal#{form.index}" } do %>
          <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"/>
          </svg>
          <span class="sr-only">Close modal</span>
        <% end %>
      </div>

      <!-- Modal body -->
      <div class="p-4">
        <%= bold_label(form, :price, "entity_transaction_price_#{form.index}") %>

        <div class="grid grid-cols-6 gap-5 my-3">
          <div class="col-span-3">
            <%= render Components::TextFieldComponent.new \
                  form, :price,
                  svg: :money,
                  id: "entity_transaction_price_#{form.index}",
                  class: "font-graduate",
                  data: { price_mask_target: :input, reactive_form_target: :priceInput, entity_transaction_target: :priceInput, action: "input->price-mask#applyMask input->entity-transaction#updateExchangesPrices" } %>
          </div>

          <%= button_tag "1/1", type: :button, class: "bg-slate-800 text-white font-bold p-1 border-2 border-red-300 rounded-sm shadow-sm", data: { action: "entity-transaction#fillPrice", divider: 1 } %>
          <%= button_tag "1/2", type: :button, class: "bg-slate-800 text-white font-bold p-1 border-2 border-green-300 rounded-sm shadow-sm", data: { action: "entity-transaction#fillPrice", divider: 2 } %>
          <%= button_tag "1/3", type: :button, class: "bg-slate-800 text-white font-bold p-1 border-2 border-blue-300 rounded-sm shadow-sm", data: { action: "entity-transaction#fillPrice", divider: 3 } %>
        </div>

        <div class="grid grid-cols-2 justify-center items-center gap-5 my-3">
          <div>
            <%= bold_label(form, :is_payer, "entity_transaction_is_payer_#{form.index}") %>

            <div class="mb-3">
              <%= form.checkbox :is_payer,
                                id: "entity_transaction_is_payer_#{form.index}",
                                class: "rounded-sm border-gray-300 text-indigo-600 focus:ring-indigo-500",
                                data: { action: "change->entity-transaction#toggleExchanges" } %>
            </div>
          </div>

          <div>
            <%= bold_label(form, :exchanges_count, "entity_transaction_exchanges_count_#{form.index}") %>

            <%= render Components::TextFieldComponent.new \
                  form, :exchanges_count,
                  type: :number,
                  svg: :number,
                  min: 0, max: 72,
                  disabled: !entity_transaction.is_payer,
                  value: entity_transaction&.exchanges_count&.to_i,
                  id: "entity_transaction_exchanges_count_#{form.index}",
                  class: "font-graduate #{'opacity-50' unless entity_transaction.is_payer}",
                  data: { entity_transaction_target: :exchangesCountInput, action: "input->entity-transaction#updateExchangesPrices" } %>
          </div>
        </div>

        <!-- Exchanges -->
        <div id="exchanges_nested" data-controller="nested-form" data-nested-form-wrapper-selector-value=".nested-exchange-wrapper">
          <template data-nested-form-target="template">
            <%= form.fields_for :exchanges, Exchange.new, child_index: "NEW_NESTED_RECORD" do |exchange_fields| %>
              <%= render "exchanges/exchange_fields", form: exchange_fields %>
            <% end %>
          </template>

          <% exchanges_association = entity_transaction.exchanges.includes(:cash_transaction) if entity_transaction.exchanges.count > 1 %>
          <%= form.fields_for :exchanges, exchanges_association do |exchange_fields| %>
            <%= render "exchanges/exchange_fields", form: exchange_fields %>
          <% end %>

          <!-- inserted elements -->
          <div data-nested-form-target="target"></div>

          <%= link_to nil, nil, class: :hidden, data: { entity_transaction_target: :addExchange, action: "nested-form#addChildNested" } %>
        </div>
      </div>
    </div>
  </div>
<% end %>
